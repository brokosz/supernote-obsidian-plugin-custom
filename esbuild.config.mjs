import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

// Use a simpler configuration without workers
const buildOptions = {
    banner: {
        js: banner,
    },
    entryPoints: ["src/main.ts"],
    bundle: true,
    external: [
        "obsidian",
        "electron",
        "@codemirror/autocomplete",
        "@codemirror/collab",
        "@codemirror/commands",
        "@codemirror/language",
        "@codemirror/lint",
        "@codemirror/search",
        "@codemirror/state",
        "@codemirror/view",
        "@lezer/common",
        "@lezer/highlight",
        "@lezer/lr",
        ...builtins],
    format: "cjs",
    target: "es2018",
    logLevel: "info",
    sourcemap: prod ? false : "inline",
    treeShaking: true,
    outfile: "main.js",
};

if (prod) {
    esbuild.build(buildOptions)
        .catch(err => {
            console.error(err);
            process.exit(1);
        });
} else {
    esbuild.build({
        ...buildOptions,
        watch: {
            onRebuild(error) {
                if (error) console.error('Watch build failed:', error);
                else console.log('Watch build succeeded');
            },
        },
    }).then(result => {
        console.log('Build succeeded');
    }).catch(err => {
        console.error(err);
        process.exit(1);
    });
}